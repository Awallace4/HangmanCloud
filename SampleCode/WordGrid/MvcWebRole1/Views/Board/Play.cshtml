@model MvcWebRole1.Models.GameModel

@using MvcWebRole1.Models
@using WordGridGame

@{
    ViewBag.Title = "Board";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Layout = "~/Views/Shared/_LayoutBoard.cshtml";
}
<script src="@Url.Content("~/Scripts/HangManScript.js")" type="text/javascript"></script>

<!-- The game board consists of a series of rows and a series of cells in the rows.
    Each cell is either occupied or unoccupied and if occupied contains a tile.
     -->
<style>
    h2 {
        font-family: 'Bookman Old Style';
    }
    p {
        font-family: 'Bookman Old Style';
    }
    h3 {
        font-family: 'Bookman Old Style';
    }
    table.board {
        border: outset #d3cdbb;
        border-collapse: separate;
        border-spacing: 0px 0px;
        padding: 1px 1px 1px 1px;
    }
    table.rack {
        padding: 2px;
        border-collapse: separate;
        min-width: 350px;
    }
    td.cell {
        margin: 2px 2px 2px 2px;
        padding: 1px 1px 1px 1px;
        border: inset #f6eed8;
    }
    td.rackCell {
        min-width: 350px;
        min-height: 55px;
    }
    img.spaceimage {
        margin: 0px 0px 0px 0px;
        border: 1px solid white;
        padding: 0px 0px 0px 0px;
    }
    img.playedTile {
        border: 1px dotted black;
        margin: 0px 0px 0px 0px;
    }
    img.tileOnBoard {
        margin: 0px 0px 0px 0px;
        padding: 1px 1px 1px 1px;
    }
    div.boardSpace {
        height: 30px;
    }
    div.rackSpace {
        border: 1px solid black;
        margin: 0px;
        padding: 0px;
        min-height: 32px;
    }
    input {
        font-family: 'Bookman Old Style';
        background-color: azure;
    }

</style>
<!-- <form name="wordgrid" action="~/Board/Move" method="post" onsubmit="return capturePlayDetails(event)">-->
@using (@Html.BeginForm("Move", null, FormMethod.Post, new { name = "hangman", onsubmit = "return capturePlayDetails(event)" }))
{
    @Html.AntiForgeryToken()
    <h2>Hangman</h2>
    <p id="userMessage">@Model.UserMessage</p>

    <!-- <input name="word" type="hidden" value="" />-->
    <input name="gameID" id="gameID" type="hidden" value="@Model.GameID" />
    <input name="playerID" id="playerID" type="hidden" value="@Model.UserPlayerID" />
    <input name="guessedLetter" id="guessedLetter" type="hidden" value="" />

    <input type="submit" id="submitPlay" value="Submit Play" disabled="disabled" />
}

@section info
{
    @{
        string HangManState;
        switch (Model.HangManState)
        {
            case 0:
                HangManState = "EMPTY";
                break;
            case 1:
                HangManState = "HEAD";
                break;
            case 2:
                HangManState = "BODY";
                break;
            case 3:
                HangManState = "LEFT ARM";
                break;
            case 4:
                HangManState = "RIGHT ARM";
                break;
            case 5:
                HangManState = "LEFT LEG";
                break;
            case 6:
            default:
                HangManState = "DEAD";
                break;
        }
        <p>Hangman State: @HangManState</p>
        <p>Word to fill: @Model.WordToFillDisplay </p>
        <p>Word to guess: @Model.WordToGuess </p>
        <p>Current turn: @Model.CurrentPlayerTurn</p>
        <p>Move number: @Model.MoveCount</p>
    }


    @{ // This extra level of brace shouldn't be necessary but there seems to be some sort of bug.
       <table>
         <tr>
           <td>
           <table>
           @{
               foreach (Player player in Model.Players)
               {
                   bool isMyTurn = (Model.State != GameState.GameOver) &&
                       (player.PlayerId == Model.CurrentTurnPlayerID);
                   bool isMe = (Model.State != GameState.GameOver) &&
                       (player.PlayerId == Model.UserPlayerID);
                   <tr>
                       <td><p> @player.Name </p></td>
                    <td>
                       <p>id: @player.PlayerId
                       <!-- An asterisk for the player whose turn it is. -->
                       @if (isMyTurn)
                       { 
                           <span>*</span>
                       }

                       </p>
                    </td>
                   </tr>
                   <tr>
                       <td></td>
                    <td>
                        @if (isMe && isMyTurn)
                        {
                            <div class="myturn" id="myturn">YOUR TURN!</div>
                        }
                        else
                        {
                            <div> </div>
                        }
                   </td>
                  </tr>
               }

               <tr>
                   <td> @if (Model.State == GameState.GameOver)
                        {
                            <p>Game Over</p>
                        }
                   </td>
               </tr>
            }
            </table>    
           </td>
         </tr>
           <table class="rack">
               <tr id="tileRack">
                   <td class="rackCell">
                       <div class="rackSpace" id="rackSpace" ondrop="dropItem(event)" ondragover="allowDrop(event)">
                           @{
                               foreach (Char letter in Model.AvailableLetters)
                               {
                                   if (letter != null)
                                   {
                                       string letterID = "letter" + letter.ToString();
                                       string letterImageFilename = "/images/tiles/Tile_" + letter + ".png";

                                       <img class="rackTile" id="@letterID" src="@letterImageFilename" alt="@letter" onclick="selectLetter('@letterID')" width="24" />
                                   }
                               }
                           }

                       </div>
                   </td>
               </tr>
           </table>

       </table>
    
    }
}

@section rack
    {

    }


 
    


